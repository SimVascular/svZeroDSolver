
name: Build and test
on: [push, pull_request]
jobs:
  ubuntu:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install build-essential cmake libeigen3-dev libsimdjson-dev libjsoncpp-dev pybind11-dev
      - name: Build svZeroDSolver
        run: |
          mkdir Release
          cd Release
          cmake -DCMAKE_BUILD_TYPE=Release ..
          cmake --build .
      - name: Install test dependencies
        run: |
          conda create -n zerod python=3.9
          conda run -n zerod pip install pytest pytest-cov pytest-mock
          conda run -n zerod pip install -e .
      - name: Test the build
        run: |
          conda run -n zerod pytest tests/test_integration_cpp.py
  macos:
    runs-on: macos-12
    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          brew install eigen jsoncpp simdjson pybind11
      - name: Build svZeroDSolver
        run: |
          mkdir Release
          cd Release
          cmake -DCMAKE_BUILD_TYPE=Release ..
          cmake --build .
      - name: Install test dependencies
        run: |
          conda create -n zerod python=3.9
          conda run -n zerod pip install pytest pytest-cov pytest-mock
          conda run -n zerod pip install -e .
      - name: Test the build
        run: |
          conda run -n zerod pytest tests/test_integration_cpp.py
  cluster:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v2
      - name: Clone dependencies
        run: |
          mkdir externals
          cd externals
          git clone https://gitlab.com/libeigen/eigen.git
          git clone https://github.com/simdjson/simdjson.git
          git clone https://github.com/open-source-parsers/jsoncpp.git
          git clone https://github.com/pybind/pybind11.git
      - name: Build svZeroDSolver
        run: |
          mkdir Release
          cd Release
          cmake -DCMAKE_BUILD_TYPE=Release -DCLUSTER=ON ..
          cmake --build .
      - name: Install test dependencies
        run: |
          conda create -n zerod python=3.9
          conda run -n zerod pip install pytest pytest-cov pytest-mock
          conda run -n zerod pip install -e .
      - name: Test the build
        run: |
          conda run -n zerod pytest tests/test_integration_cpp.py
  pytest:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up environment
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install dependencies
        run: |
          conda create -n zerod python=3.9
          conda run -n zerod pip install pytest pytest-cov pytest-mock
          conda run -n zerod pip install -e .
      - name: Run pytest
        run: |
          conda run -n zerod pytest tests/test_integration.py
      - name: Save coverage report
        uses: actions/upload-artifact@v3
        with:
          name: coverage_report
          path: htmlcov
  